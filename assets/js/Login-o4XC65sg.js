import{r as g,b as H,j as n}from"./vendor-BjgPdEnQ.js";import{s as d}from"./game-DMqPqpoE.js";import{a as z,b as W,c as Q,g as V,h as X,k as Y,d as Z,s as ee,e as ae,f as se,i as re,p as te}from"./guru-D7H-5Pkh.js";const y=[{id_siswa:1,nis:"2023001",nama:"Rudi Hartono",id_kelas:1,tanggal_lahir:"2012-03-14",alamat:"Jl. Cemara No.8",id_role:4},{id_siswa:2,nis:"2023002",nama:"Nisa Kurnia",id_kelas:2,tanggal_lahir:"2012-06-21",alamat:"Jl. Melati No.9",id_role:4},{id_siswa:3,nis:"123131",nama:"Fachri Aditya Rizky",id_kelas:1,alamat:"sdfscds",id_role:4}],C={admin:[{username:"budi.setiawan",password:"admin123",type:"superadmin",nama:"Budi Setiawan"},{username:"siti.aminah",password:"pass1234",type:"admin_sekolah",nama:"Siti Aminah"},{username:"dodi.pratama",password:"pass1234",type:"admin_dev",nama:"Dodi Pratama"}],guru:{username:"guru",password:"guru123",nama:"Ahmad Fauzi",nuptk:"198401232005011001",id_guru:1,no_telp:"081234567890",alamat:"Jl. Pendidikan No.1",id_role:2,kelas:[1,2,3]},ortu:{username:"ortu",password:"ortu123"}},ne=[{id_guru:1,nuptk:"198401232005011001",nama:"Ahmad Fauzi",no_telp:"081234567890",alamat:"Jl. Pendidikan No.1",id_role:2,kelas:[1,2,3]},{id_guru:2,nuptk:"197905152003021002",nama:"Lilis Kusuma",no_telp:"082134567891",alamat:"Jl. Merdeka No.2",id_role:2,kelas:[4,5,6]}],L=(t,l,s)=>{let r;switch(s){case"siswa":r=y.find(o=>o.nama===t&&o.nis===l);break;case"guru":r=ne.find(o=>o.nama===t&&o.nuptk===l);break}if(!r)throw new Error("Invalid credentials");return{user:r,session:null,isOffline:!0}},oe=async(t,l)=>{try{if(console.log(`[Database] Mencoba login siswa dengan nama: ${t} dan NIS: ${l}`),!d){console.error("[Database] Supabase client tidak tersedia");const s=y.find(r=>r.nama===t&&r.nis===l);if(!s)throw new Error("Siswa tidak ditemukan (offline mode)");return console.log("[Database] Menggunakan data offline:",s),s}if(typeof d.from!="function")if(console.error("[Database] Metode from tidak tersedia pada supabase client"),d.from&&typeof d.from=="function"){console.log("[Database] Mencoba memperbaiki metode from dengan cara alternatif");try{const s=d.from.bind(d),r=s("siswa");if(r&&typeof r.select=="function")console.log("[Database] Metode from berhasil diperbaiki"),d.from=s;else{console.error("[Database] Metode from tidak dapat diperbaiki");const o=y.find(c=>c.nama===t&&c.nis===l);if(!o)throw new Error("Siswa tidak ditemukan (offline mode)");return console.log("[Database] Menggunakan data offline:",o),o}}catch(s){console.error("[Database] Error saat memperbaiki metode from:",s);const r=y.find(o=>o.nama===t&&o.nis===l);if(!r)throw new Error("Siswa tidak ditemukan (offline mode)");return console.log("[Database] Menggunakan data offline:",r),r}}else{const s=y.find(r=>r.nama===t&&r.nis===l);if(!s)throw new Error("Siswa tidak ditemukan (offline mode)");return console.log("[Database] Menggunakan data offline:",s),s}try{console.log("[Database] Mencoba dengan metode Supabase client");const{data:s,error:r}=await d.from("siswa").select(`
          *,
          kelas (
            id_kelas,
            nama_kelas
          )
        `).eq("nama",t).eq("nis",l);if(console.log("[Database] Hasil query Supabase:",{data:s,error:r}),r)throw console.error("[Database] Error dengan metode Supabase client:",r),r;if(!s||s.length===0)throw console.warn("[Database] Tidak ada data siswa yang ditemukan"),new Error("Siswa tidak ditemukan");return console.log("[Database] Login siswa berhasil dengan data:",s[0]),s[0]}catch(s){console.error("[Database] Error dengan Supabase client, mencoba dengan fetch API:",s);try{const o=`${d.supabaseUrl}/rest/v1/siswa?select=*,kelas(id_kelas,nama_kelas)&nama=eq.${encodeURIComponent(t)}&nis=eq.${encodeURIComponent(l)}`;console.log("[Database] Request URL:",o);const c=await fetch(o,{method:"GET",headers:{apikey:d.supabaseKey,Authorization:`Bearer ${d.supabaseKey}`,"Content-Type":"application/json",Accept:"application/json",Prefer:"return=representation"}});if(!c.ok)throw console.error("[Database] HTTP error:",c.status,c.statusText),new Error(`HTTP error! status: ${c.status}`);const h=await c.json();if(console.log("[Database] Data dari fetch API:",h),!h||h.length===0)throw console.warn("[Database] Tidak ada data siswa yang ditemukan dengan fetch API"),new Error("Siswa tidak ditemukan");return console.log("[Database] Login siswa berhasil dengan fetch API:",h[0]),h[0]}catch(r){console.error("[Database] Fetch API error:",r);const o=y.find(c=>c.nama===t&&c.nis===l);if(!o)throw new Error("Siswa tidak ditemukan (offline mode)");return console.log("[Database] Menggunakan data offline sebagai fallback terakhir:",o),o}}}catch(s){throw console.error("[Database] Login siswa error:",s),s}},ie=async(t,l)=>{try{if(console.log(`[Database] Mencoba login guru dengan nama: ${t} dan NUPTK: ${l}`),!d)return console.error("[Database] Supabase client tidak tersedia"),L(t,l,"guru");try{console.log("[Database] Mencoba dengan metode Supabase client");const{data:s,error:r}=await d.from("guru").select(`
          *,
          kelas (
            id_kelas,
            nama_kelas
          )
        `).eq("nama",t).eq("nuptk",l);if(r)throw console.error("[Database] Error dengan metode Supabase client:",r),r;return!s||s.length===0?(console.warn("[Database] Tidak ada data guru yang ditemukan"),L(t,l,"guru")):(console.log("[Database] Login guru berhasil dengan data:",s[0]),{...s[0],isLoggedIn:!0,role:"guru",lastLoginTime:new Date().toISOString(),offline:!1})}catch(s){console.error("[Database] Error dengan Supabase client, mencoba dengan fetch API:",s);try{const r=`${d.supabaseUrl}/rest/v1/guru?select=*,kelas(id_kelas,nama_kelas)&nama=eq.${encodeURIComponent(t)}&nuptk=eq.${encodeURIComponent(l)}`;console.log("[Database] Request URL:",r);const o=await fetch(r,{headers:{apikey:d.supabaseKey,Authorization:`Bearer ${d.supabaseKey}`,"Content-Type":"application/json",Accept:"application/json"}});if(!o.ok)throw console.error("[Database] HTTP error:",o.status,o.statusText),new Error(`HTTP error! status: ${o.status}`);const c=await o.json();if(console.log("[Database] Data dari fetch API:",c),!c||c.length===0)return console.warn("[Database] Tidak ada data guru yang ditemukan dengan fetch API"),L(t,l,"guru");const h={...c[0],isLoggedIn:!0,role:"guru",lastLoginTime:new Date().toISOString(),offline:!1};return console.log("[Database] Login guru berhasil dengan fetch API:",h),h}catch(r){return console.error("[Database] Fetch API error:",r),L(t,l,"guru")}}}catch(s){throw console.error("[Database] Login guru error:",s),s}},le=[{name:"Anjing",src:z},{name:"Babi",src:W},{name:"Bebek",src:Q},{name:"Gurita",src:V},{name:"Harimau",src:X},{name:"Kelinci",src:Y},{name:"Kucing",src:Z},{name:"Sapi",src:ee},{name:"Serigala",src:ae},{name:"Singa",src:se},{name:"Laki-laki",src:re},{name:"Perempuan",src:te}],ue=({message:t,type:l,onClose:s})=>(g.useEffect(()=>{const r=setTimeout(()=>{s()},4e3);return()=>clearTimeout(r)},[s]),n.jsx("div",{className:`notification ${l}`,onClick:s,children:t})),ce=({message:t="Memproses login..."})=>n.jsxs("div",{className:"loading-spinner",children:[n.jsx("div",{className:"spinner"}),n.jsx("div",{className:"loading-text",children:t})]}),de=()=>n.jsx("div",{className:"avatar-skeleton-grid",children:Array(10).fill().map((t,l)=>n.jsx("div",{className:"avatar-skeleton"},l))});function pe(){const[t,l]=g.useState(""),[s,r]=g.useState(""),[o,c]=g.useState(""),[h,k]=g.useState(!1),[_,$]=g.useState(!1),[x,U]=g.useState(null),[i,R]=g.useState(""),[D,m]=g.useState(!1),[E,I]=g.useState(!0),[T,K]=g.useState(0),[j,M]=g.useState(null),[S,J]=g.useState({}),[q,me]=g.useState(!1),w=H(),p=(e,a="info")=>{M({message:e,type:a})},v=(e,a)=>{const u={...S};e==="username"&&!a.trim()?u.username="Nama tidak boleh kosong":e==="username"&&delete u.username,e==="password"&&!a.trim()?u.password=i==="siswa"?"NIS tidak boleh kosong":i==="guru"?"NUPTK tidak boleh kosong":"Password tidak boleh kosong":e==="password"&&delete u.password,J(u)};g.useEffect(()=>{const e=localStorage.getItem("selectedRole");e?R(e):w("/"),A()},[w]),g.useEffect(()=>{const e=()=>{navigator.onLine?D&&T<3&&A():(m(!0),I(!1))};return window.addEventListener("online",e),window.addEventListener("offline",()=>{m(!0),I(!1)}),e(),()=>{window.removeEventListener("online",e),window.removeEventListener("offline",()=>{m(!0),I(!1)})}},[D,T]);const A=async()=>{try{if(I(!0),!navigator.onLine)return console.log("Browser reports offline"),m(!0),!1;if(!d)return console.error("Supabase client not initialized"),m(!0),!1;try{const{error:e}=await d.from("siswa").select("id_siswa").limit(1);return e?(console.error("Database connection error:",e),m(!0),!1):(m(!1),!0)}catch(e){return console.error("Database test failed:",e),m(!0),!1}}catch(e){return console.error("Connection check error:",e),m(!0),!1}finally{I(!1)}},F=()=>{K(e=>e+1),A()},G=async e=>{e.preventDefault(),k(!0),c("");try{if(i==="siswa")try{const a=await oe(t,s);if(!a){p("Login gagal! Periksa kembali nama dan NIS Anda.","error"),k(!1);return}localStorage.setItem("userData",JSON.stringify(a)),a.offline&&(m(!0),localStorage.setItem("isOfflineMode","true")),p("Login siswa berhasil!","success"),setTimeout(()=>b(null,"siswa"),1500)}catch(a){console.error("Error during siswa login:",a),p("Login Gagal. Mencoba mode offline...","warning"),O()}else if(i==="guru")try{const a=await ie(t,s);if(!a){p("Login gagal! Periksa kembali nama dan NUPTK Anda.","error"),k(!1);return}localStorage.setItem("userData",JSON.stringify(a)),a.offline&&(m(!0),localStorage.setItem("isOfflineMode","true")),p("Login guru berhasil!","success"),setTimeout(()=>b(null,"guru"),1500)}catch(a){console.error("Error during guru login:",a);const u=C.guru;if(t===u.username&&s===u.password){const f={...u,offline:!0,isLoggedIn:!0,role:"guru",lastLoginTime:new Date().toISOString()};localStorage.setItem("userData",JSON.stringify(f)),localStorage.setItem("isOfflineMode","true"),m(!0),b(null,"guru")}else c("Username atau password guru salah!")}else if(i==="admin")try{console.log("Attempting admin login with username:",t);const a=await loginAdmin(t,s);if(!a){c("Username atau password admin salah!"),p("Login gagal! Periksa kembali username dan password.","error"),k(!1);return}console.log("Admin login successful with user:",a);const u={nama:a.nama,tipe_admin:a.tipe_admin,id_admin:a.id_admin,username:t};localStorage.setItem("userData",JSON.stringify(u)),a.offline&&(m(!0),localStorage.setItem("isOfflineMode","true")),p("Login admin berhasil!","success"),setTimeout(()=>b(null,"admin"),1500)}catch(a){console.error("Error during admin login:",a),p("Login Gagal. Periksa Kembali Akun Anda....","error"),O()}}catch(a){console.error("Login error:",a),c(a.message||"Terjadi kesalahan saat login")}finally{k(!1)}},O=()=>{if(i==="siswa"){const e=dummySiswa.find(u=>u.nama===t&&u.nis===s);if(!e){c("Nama atau NIS tidak ditemukan dalam data offline"),k(!1);return}const a={...e,id_siswa:Date.now(),offline:!0,isLoggedIn:!0,role:"siswa",lastLoginTime:new Date().toISOString()};localStorage.setItem("userData",JSON.stringify(a)),localStorage.setItem("isLoggedIn","true"),localStorage.setItem("userRole","siswa"),localStorage.setItem("id_siswa",a.id_siswa.toString()),localStorage.setItem("isOfflineMode","true"),m(!0),$(!0)}else if(i==="guru"){const e=dummyGuru.find(u=>u.nama===t&&u.nuptk===s);if(!e){k(!1);return}const a={...e,offline:!0};localStorage.setItem("userData",JSON.stringify(a)),localStorage.setItem("isOfflineMode","true"),m(!0),b(null,"guru")}else if(i==="admin"){const e=C.admin.find(a=>a.username===t&&a.password===s);if(e){const a={nama:e.nama,tipe_admin:e.type,username:e.username,offline:!0};localStorage.setItem("userData",JSON.stringify(a)),localStorage.setItem("isOfflineMode","true"),m(!0),b(null,"admin")}else c("Username atau password admin salah!"),k(!1)}},P=async e=>{U(e),p(`Avatar ${e.name} dipilih!`,"success");try{const a=JSON.parse(localStorage.getItem("userData")||"{}");if(a&&a.id_siswa){let u=!0;if(!D)try{const f=await updateSiswaAvatar(a.id_siswa,e.name);f&&!f.error&&(f.offline&&(m(!0),localStorage.setItem("isOfflineMode","true")),a.avatar=f.avatar||e.name,u=!1)}catch(f){console.error("Error updating avatar online:",f)}u&&(a.avatar=e.name),localStorage.setItem("userData",JSON.stringify(a))}setTimeout(()=>b(e,"siswa"),1e3)}catch(a){console.error("Error during avatar selection:",a),b(e,"siswa")}},b=(e,a)=>{switch(localStorage.setItem("isLoggedIn","true"),localStorage.setItem("userRole",a),localStorage.setItem("isOfflineMode",D.toString()),e&&localStorage.setItem("selectedAvatar",JSON.stringify(e)),a){case"siswa":{const f=JSON.parse(localStorage.getItem("userData")||"{}").id_kelas;w(f===1?"/kelas1":f===2?"/kelas2":f===3?"/kelas3":f===4?"/kelas4":f===5?"/kelas5":f===6?"/kelas6":"/main-siswa");break}case"guru":{w("/guru/dashboard");break}case"ortu":{w("/dashboard-ortu");break}case"admin":{w("/admin/dashboard");break}default:w("/")}},B=()=>{localStorage.removeItem("selectedRole"),w("/")},N=(()=>{switch(i){case"siswa":return{title:"Login Siswa",icon:null};case"guru":return{title:"Login Guru",icon:null};case"ortu":return{title:"Login Orang Tua",icon:null};case"admin":return{title:"Login Admin",icon:null};default:return{title:"Login",icon:null}}})();return n.jsxs("div",{className:"login-container",children:[j&&n.jsx(ue,{message:j.message,type:j.type,onClose:()=>M(null)}),D&&n.jsxs("div",{className:"offline-indicator",children:["Mode Offline - Data login digunakan dari local storage",n.jsx("button",{className:"retry-button",onClick:F,disabled:E,children:E?"Memeriksa...":"Coba Sambung Ulang"})]}),n.jsx("button",{className:`back-button role-${i}`,onClick:B,children:"Kembali"}),n.jsxs("div",{className:`login-box role-${i}`,children:[n.jsx("div",{className:"login-header",children:n.jsx("h2",{children:N.title})}),h&&n.jsx(ce,{}),!_&&!h?n.jsxs("div",{className:"login-form1",children:[N.icon&&n.jsx("div",{className:"role-icon-container",children:n.jsx("img",{src:N.icon,alt:`Icon ${N.title}`,className:"role-icon-large"})}),n.jsxs("form",{onSubmit:G,children:[n.jsxs("div",{className:`input-group ${S.username?"error":t.trim()?"success":""}`,children:[n.jsx("label",{htmlFor:"username",children:i==="siswa"||i==="guru"?"Nama":i==="admin"?"Email":"Username"}),n.jsx("input",{type:"text",id:"username",value:t,onChange:e=>{l(e.target.value),v("username",e.target.value)},onBlur:e=>v("username",e.target.value),required:!0,autoComplete:i==="siswa"?"given-name":i==="guru"?"name":i==="admin"?"email":"username",placeholder:i==="siswa"||i==="guru"?"Masukkan nama":i==="ortu"?"ortu":"Masukkan email admin"}),S.username&&n.jsx("div",{className:"field-error",children:S.username})]}),n.jsxs("div",{className:`input-group ${S.password?"error":s.trim()?"success":""}`,children:[n.jsx("label",{htmlFor:"password",children:i==="siswa"?"Nomor Induk Siswa (NIS)":i==="guru"?"NUPTK":"Password"}),n.jsx("input",{type:i==="siswa"||i==="guru"?"text":"password",id:"password",value:s,onChange:e=>{r(e.target.value),v("password",e.target.value)},onBlur:e=>v("password",e.target.value),required:!0,autoComplete:i==="siswa"||i==="guru"?"username":"current-password",placeholder:i==="siswa"?"Masukkan NIS":i==="guru"?"Masukkan NUPTK":i==="ortu"?"ortu123":"Masukkan password"}),S.password&&n.jsx("div",{className:"field-error",children:S.password})]}),o&&n.jsx("div",{className:"error-message",children:o}),n.jsx("button",{type:"submit",className:"login-button",disabled:h,children:h?"Memproses...":"Login"})]})]}):_?n.jsxs("div",{className:"avatar-selection",children:[n.jsx("h3",{children:"Pilih Avatar Kamu!"}),q?n.jsx(de,{}):n.jsx("div",{className:"avatar-grid",children:le.map((e,a)=>n.jsxs(motion.div,{className:"avatar-option",onClick:()=>P(e),onKeyDown:u=>{(u.key==="Enter"||u.key===" ")&&(u.preventDefault(),P(e))},tabIndex:0,role:"button","aria-label":`Pilih avatar ${e.name}`,"aria-selected":(x==null?void 0:x.name)===e.name,whileHover:{scale:1.05},whileTap:{scale:.95},initial:{opacity:0,y:20},animate:{opacity:1,y:0},transition:{delay:a*.05},children:[n.jsx("img",{src:e.src,alt:e.name}),n.jsx("p",{children:e.name})]},a))})]}):null]})]})}export{pe as default};
